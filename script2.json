{"paragraphs":[{"text":"%pyspark\nspark","user":"anonymous","dateUpdated":"2018-11-27T23:55:23+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<pyspark.sql.session.SparkSession object at 0x7f2d9ba70f98>\n"}]},"apps":[],"jobName":"paragraph_1543362923533_-1248304688","id":"20181121-103540_732683715","dateCreated":"2018-11-27T23:55:23+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:18276"},{"text":"%pyspark\ndataframe = sqlContext.read.csv('s3://vieto/data.csv/part-00000-7710ed52-6894-45b0-9d46-8a446f591d7f-c000.csv', header =True, sep = '|')\ndataframe.registerTempTable('dados')","user":"anonymous","dateUpdated":"2018-11-27T23:55:23+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1543362923534_-1179150574","id":"20181126-214203_712758736","dateCreated":"2018-11-27T23:55:23+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:18277"},{"text":"%md\n## Vamos começar escolhendo um mês e um ano para observar os dados","user":"anonymous","dateUpdated":"2018-11-27T23:55:23+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Vamos começar escolhendo um mês e um ano para observar os dados</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1543362923534_897348155","id":"20181127-015750_1022637567","dateCreated":"2018-11-27T23:55:23+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:18278"},{"text":"%pyspark\nmes = z.select(\"Escolha um mês\", [(\"01\",\"Janeiro\"),\n                                (\"02\",\"Fevereiro\"),\n                                (\"03\",\"Março\"),\n                                (\"04\",\"Abril\"),\n                                (\"05\",\"Maio\"),\n                                (\"06\",\"Junho\"),\n                                (\"07\",\"Julho\"),\n                                (\"08\",\"Agosto\"),\n                                (\"09\",\"Setembro\"),\n                                (\"10\",\"Outubro\"),\n                                (\"11\",\"Novembro\"),\n                                (\"12\",\"Dezembro\")])\n                                \nano = z.select(\"Escolha um ano\", [(\"2015\",\"2015\"),\n                                (\"2016\",\"2016\"),\n                                (\"2017\",\"2017\"),\n                                (\"2018\",\"2018\")])\ntry:                                \n    taxi = spark.read.csv(r's3://nyc-tlc/trip data/yellow_tripdata_' + ano + '-' + mes+ '.csv', header = True) \n    app = spark.read.csv(r's3://nyc-tlc/trip data/fhv_tripdata_' + ano + '-' + mes+ '.csv', header = True)\n\n    total_taxi = sqlContext.sql(\"select total_taxi from dados where mes == {0} and ano == {1}\".format(mes, ano)).collect()[0][0]  \n    total_app = sqlContext.sql('select total_app from dados where mes = {0} and ano = {1}'.format(mes, ano)).collect()[0][0]\n    mudanca_mes_taxi = sqlContext.sql('select mudanca_mes_taxi from dados where mes = {0} and ano = {1}'.format(mes, ano)).collect()[0][0]\n    mudanca_ano_taxi = sqlContext.sql('select mudanca_ano_taxi from dados where mes = {0} and ano = {1}'.format(mes, ano)).collect()[0][0]\n    taxa_taxi_mes_passado = sqlContext.sql('select taxa_taxi_mes_passado from dados where mes = {0} and ano = {1}'.format(mes, ano)).collect()[0][0]\n    taxa_taxi_ano_passado = sqlContext.sql('select taxa_taxi_ano_passado from dados where mes = {0} and ano = {1}'.format(mes, ano)).collect()[0][0]\n    mudanca_mes_app = sqlContext.sql('select mudanca_ano_app from dados where mes = {0} and ano = {1}'.format(mes, ano)).collect()[0][0]\n    mudanca_ano_app = sqlContext.sql('select mudanca_ano_app from dados where mes = {0} and ano = {1}'.format(mes, ano)).collect()[0][0]\n    taxa_app_mes_passado = sqlContext.sql('select taxa_app_mes_passado from dados where mes = {0} and ano = {1}'.format(mes, ano)).collect()[0][0]\n    taxa_app_ano_passado = sqlContext.sql('select taxa_app_mes_passado from dados where mes = {0} and ano = {1}'.format(mes, ano)).collect()[0][0]\n\nexcept:\n    print(\"Não existem dados para este período.\")","user":"anonymous","dateUpdated":"2018-11-27T23:56:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"runOnSelectionChange":true,"results":{},"enabled":true},"settings":{"params":{"mes":"4","Escolha um mês":"09","Escolha um ano":"2017"},"forms":{"Escolha um mês":{"type":"Select","options":[{"value":"01","displayName":"Janeiro","$$hashKey":"object:18403"},{"value":"02","displayName":"Fevereiro","$$hashKey":"object:18404"},{"value":"03","displayName":"Março","$$hashKey":"object:18405"},{"value":"04","displayName":"Abril","$$hashKey":"object:18406"},{"value":"05","displayName":"Maio","$$hashKey":"object:18407"},{"value":"06","displayName":"Junho","$$hashKey":"object:18408"},{"value":"07","displayName":"Julho","$$hashKey":"object:18409"},{"value":"08","displayName":"Agosto","$$hashKey":"object:18410"},{"value":"09","displayName":"Setembro","$$hashKey":"object:18411"},{"value":"10","displayName":"Outubro","$$hashKey":"object:18412"},{"value":"11","displayName":"Novembro","$$hashKey":"object:18413"},{"value":"12","displayName":"Dezembro","$$hashKey":"object:18414"}],"name":"Escolha um mês","displayName":"Escolha um mês","defaultValue":"","hidden":false,"$$hashKey":"object:18388"},"Escolha um ano":{"type":"Select","options":[{"value":"2015","displayName":"2015","$$hashKey":"object:18421"},{"value":"2016","displayName":"2016","$$hashKey":"object:18422"},{"value":"2017","displayName":"2017","$$hashKey":"object:18423"},{"value":"2018","displayName":"2018","$$hashKey":"object:18424"}],"name":"Escolha um ano","displayName":"Escolha um ano","defaultValue":"","hidden":false,"$$hashKey":"object:18389"}}},"apps":[],"jobName":"paragraph_1543362923534_-1412598710","id":"20181121-173136_1137937986","dateCreated":"2018-11-27T23:55:23+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:18279"},{"text":"%pyspark\nmeses = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\",\"10\",\"11\",\"12\"]\nanos = [\"2015\", \"2016\", \"2017\"]\n\ncols = ['mes', 'ano', 'counts']\nvals = []\n\nfor ano in anos:\n    for mes in meses:\n        taxi = spark.read.csv(r's3://nyc-tlc/trip data/yellow_tripdata_' + ano + '-' + mes+ '.csv', header = True) \n        app = spark.read.csv(r's3://nyc-tlc/trip data/fhv_tripdata_' + ano + '-' + mes+ '.csv', header = True)\n        \n        from pyspark.sql.functions import split, col\n\n        parts_taxi = split(\"tpep_pickup_datetime\", \" \")\n\n        parts_app = split(\"Pickup_date\", \" \")\n    \n        parts_app_novo = split(\"Pickup_DateTime\", \" \")\n    \n        hora_completa_taxi = taxi.select(parts_taxi[1].alias(\"hora completa\"))\n\n        try:\n\n            hora_completa_app = app.select(parts_app[1].alias(\"hora completa\"))\n\n        except:\n    \n            hora_completa_app = app.select(parts_app_novo[1].alias(\"hora completa\"))\n\n        parts2 = split(\"hora completa\", \":\")\n\n        hora_taxi = hora_completa_taxi.select(parts2[0].alias(\"hora\"))\n\n        hora_app = hora_completa_app.select(parts2[0].alias(\"hora\"))\n        \n        hora_total = hora_taxi.union(hora_app)\n        hora_total.registerTempTable('hora_total')\n        \n        horas =  sqlContext.sql(\"SELECT hora, COUNT(*) as num FROM hora_total GROUP BY hora ORDER BY hora\")\n        \n        temp = [mes, ano, horas.select('num').collect()]\n        vals.append(temp)\n        print(temp)\n\nm = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\"]\nfor mes in m:\n    ano = \"2018\"\n    taxi = spark.read.csv(r's3://nyc-tlc/trip data/yellow_tripdata_' + ano + '-' + mes+ '.csv', header = True) \n    app = spark.read.csv(r's3://nyc-tlc/trip data/fhv_tripdata_' + ano + '-' + mes+ '.csv', header = True)\n        \n    from pyspark.sql.functions import split, col\n\n    parts_taxi = split(\"tpep_pickup_datetime\", \" \")\n\n    parts_app = split(\"Pickup_date\", \" \")\n    \n    parts_app_novo = split(\"Pickup_DateTime\", \" \")\n    \n    hora_completa_taxi = taxi.select(parts_taxi[1].alias(\"hora completa\"))\n\n    try:\n\n        hora_completa_app = app.select(parts_app[1].alias(\"hora completa\"))\n\n    except:\n    \n        hora_completa_app = app.select(parts_app_novo[1].alias(\"hora completa\"))\n\n    parts2 = split(\"hora completa\", \":\")\n\n    hora_taxi = hora_completa_taxi.select(parts2[0].alias(\"hora\"))\n\n    hora_app = hora_completa_app.select(parts2[0].alias(\"hora\"))\n        \n    hora_total = hora_taxi.union(hora_app)\n    hora_total.registerTempTable('hora_total')\n        \n    horas =  sqlContext.sql(\"SELECT hora, COUNT(*) as num FROM hora_total GROUP BY hora ORDER BY hora\")\n        \n    temp = [mes, ano, horas.select('num').collect()]\n    vals.append(temp)\n    print(temp)","user":"anonymous","dateUpdated":"2018-11-27T23:55:23+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543362923535_1192589156","id":"20181127-014618_441064301","dateCreated":"2018-11-27T23:55:23+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:18280"},{"text":"%pyspark\ndf2 = sqlContext.createDataFrame(vals, cols)","user":"anonymous","dateUpdated":"2018-11-27T23:55:23+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1543362923536_-2061711231","id":"20181127-034057_1680609971","dateCreated":"2018-11-27T23:55:23+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:18281"},{"text":"%pyspark\n\nx = df2.withColumn(\"counts\", df2[\"counts\"].cast(\"string\"))\n\nx.repartition(1).write.csv('/tmp/horacoun.csv', header=\"true\")\n","user":"anonymous","dateUpdated":"2018-11-27T23:55:23+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1543362923536_324677118","id":"20181127-034329_580954397","dateCreated":"2018-11-27T23:55:23+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:18282"}],"name":"script2","id":"2DYMS4YM6","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}